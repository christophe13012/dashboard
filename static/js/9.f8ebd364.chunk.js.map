{"version":3,"sources":["layout/DefaultLayout.js","views/employeurs/Employeurs.js","views/extrasPro/ExtrasPro.js","views/infoG/InfoG.js","views/missions/Missions.js","views/offres/Offres.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","assets/images/avatars/8.jpg","components/header/AppHeaderDropdown.js","assets/brand/logo.js","components/AppHeader.js","components/AppSidebarNav.js","assets/images/logo.png","_nav.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","utils/utils.js"],"names":["DefaultLayout","className","AUTH_JWT","db","getDatabase","Employeurs","mode","setMode","useState","actifs","setActifs","extras24Dep","setExtras24Dep","extrasSemaineDep","setExtrasSemaineDep","extrasMoisDep","setExtrasMoisDep","extrasAllDep","setExtrasAllDep","extras24","setExtras24","extras24Cat","setExtras24Cat","extras24Job","setExtras24Job","extrasSemaine","setExtrasSemaine","extrasSemaineCat","setExtrasSemaineCat","extrasSemaineJob","setExtrasSemaineJob","extrasMois","setExtrasMois","extrasMoisCat","setExtrasMoisCat","extrasMoisJob","setExtrasMoisJob","extrasAll","setExtrasAll","extrasAllCat","setExtrasAllCat","extrasAllJob","setExtrasAllJob","offers24Cat","setOffers24Cat","offers24Job","setOffers24Job","offersSemaineCat","setOffersSemaineCat","offersSemaineJob","setOffersSemaineJob","offersMoisCat","setOffersMoisCat","offersMoisJob","setOffersMoisJob","offersAllCat","setOffersAllCat","offersAllJob","setOffersAllJob","offers24State","setOffers24State","offersSemaineState","setOffersSemaineState","offersMoisState","setOffersMoisState","offersAllState","setOffersAllState","missions24Cat","setMissions24Cat","missions24Job","setMissions24Job","missionsSemaineCat","setMissionsSemaineCat","missionsSemaineJob","setMissionsSemaineJob","missionsMoisCat","setMissionsMoisCat","missionsMoisJob","setMissionsMoisJob","missionsAllCat","setMissionsAllCat","missionsAllJob","setMissionsAllJob","missions24State","setMissions24State","missionsSemaineState","setMissionsSemaineState","missionsMoisState","setMissionsMoisState","missionsAllState","setMissionsAllState","missions","setMissions","missionsValidateAll","setMissionsValidateAll","missionsValidateExtra","setMissionsValidateExtra","missionsValidateEmployeur","setMissionsValidateEmployeur","offers","setOffers","offersValidated","setOffersValidated","loading","setLoading","useEffect","client","createApolloClient","today","Date","yesterday","setDate","getDate","oneWeekAgo","oneMonthAgo","async","query","gql","then","result","data","mission","missionsBoth","filter","x","isValidateByExtra","isValidateByCompany","missionsExtra","missionsEmployeur","missionsDay","datePublication","getTime","missionsWeek","missionsMois","missionsAll","missionGroupByCategory24","reduce","group","product","category","push","missionGroupByCategorySemaine","missionGroupByCategoryMois","missionGroupByCategoryAll","missionGroupByJob24","job","missionGroupByJobSemaine","missionGroupByJobMois","missionGroupByJobAll","offer","offersValid","isValidate","offersDay","publicationDate","offersWeek","offersMois","offersAll","offerGroupByCategory24","offerGroupByCategorySemaine","offerGroupByCategoryMois","offerGroupByCategoryAll","offerGroupByJob24","offerGroupByJobSemaine","offerGroupByJobMois","offerGroupByJobAll","actifsRef","ref","onValue","snapshot","val","comptesActifs","Object","keys","forEach","status","uid","type","console","log","usersInWork","user","usersListRef","firebase24","metadata","creationTime","firebaseSemaine","firebaseMois","firebaseAll","firebaseUsers24","map","usersInWork24","includes","id","firebaseUsersSemaine","usersInWorkSemaine","firebaseUsersMois","usersInWorkMois","firebaseUsersAll","usersInWorkAll","groupBydep24","postalCode","dep","toString","substring","departement","groupBydepSemaine","groupBydepMois","groupBydepAll","groupByCategory24","groupByCategorySemaine","groupByCategoryMois","groupByCategoryAll","setTimeout","fetchData","httpLink","HttpLink","uri","headers","Authorization","wsLink","WebSocketLink","options","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","ApolloClient","link","cache","InMemoryCache","xs","height","width","color","ariaLabel","variant","onClick","active","style","cursor","length","labels","datasets","backgroundColor","values","fontSize","ExtrasPro","extrasData","extra","objExtras","element","idExtra","company","groupByJob24","groupByJobSemaine","groupByJobMois","groupByJobAll","InfoG","messages24","setMessages24","messagesSemaine","setMessagesSemaine","messagesMois","setMessagesMois","messagesAll","setMessagesAll","messages","messagesDay","date","messagesWeek","columns","name","label","sort","filterType","Missions","a","b","title","Offres","Extras","React","lazy","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","ListGroups","Navs","Paginations","Popovers","Progress","Spinners","Tables","Tooltips","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Select","Validation","Charts","CoreUIIcons","Flags","Brands","Alerts","routes","path","exact","component","AppBreadcrumb","currentLocation","useLocation","pathname","getRouteName","find","route","breadcrumbs","location","prev","curr","index","array","currentPathname","getBreadcrumbs","href","breadcrumb","key","memo","AppContent","lg","fallback","idx","render","props","from","to","AppFooter","target","rel","AppHeaderDropdown","logo","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","state","position","fluid","icon","cilMenu","size","alt","AppSidebarNav","items","navLink","badge","text","navItem","item","rest","Component","NavLink","activeClassName","navGroup","String","toggler","visible","startsWith","Fragment","_nav","CNavItem","cilChartPie","customClassName","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","src","logoImg","marginRight","navigation","DocsCallout","content","plural","slice","_href","packageJson","config","coreui_library_short_version","DocsLink","DocsExample","children","cilMediaPlay","cilCode","nc"],"mappings":"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","file":"static/js/9.f8ebd364.chunk.js","sourcesContent":["import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import React, { lazy, useEffect, useState } from 'react'\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n  split,\n  useQuery,\n  gql,\n} from '@apollo/client'\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { WebSocketLink } from '@apollo/client/link/ws'\nimport { TailSpin } from 'react-loader-spinner'\nimport { departement } from 'src/utils/utils.js'\n\nimport { CNav, CNavItem, CNavLink, CCol, CCard, CCardHeader, CCardBody, CRow } from '@coreui/react'\nimport { CChartDoughnut } from '@coreui/react-chartjs'\n\nimport { getDatabase, ref, onValue } from 'firebase/database'\n\nexport const GRAPHQL_ENDPOINT = 'https://unextra.hasura.app/v1/graphql'\nexport const GRAPHQL_SUBSCRIPTIONS = 'wss://unextra.hasura.app/v1/graphql'\nexport const SECRET_KEY = '2tGF4WeLMIOsP/Q/h/VS2cd++EmJzMcb'\nexport const AUTH_JWT =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsiYW5vbnltb3VzIl0sIngtaGFzdXJhLWRlZmF1bHQtcm9sZSI6ImFub255bW91cyJ9fQ.HM2vL95bDWL2xTMwCXXDatxlfLMd_8-Mx1ymyMiCKb4'\n\nconst db = getDatabase()\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst Employeurs = () => {\n  const [mode, setMode] = useState(0)\n  const [actifs, setActifs] = useState([])\n  const [extras24Dep, setExtras24Dep] = useState([])\n  const [extrasSemaineDep, setExtrasSemaineDep] = useState([])\n  const [extrasMoisDep, setExtrasMoisDep] = useState([])\n  const [extrasAllDep, setExtrasAllDep] = useState([])\n  const [extras24, setExtras24] = useState([])\n  const [extras24Cat, setExtras24Cat] = useState([])\n  const [extras24Job, setExtras24Job] = useState([])\n  const [extrasSemaine, setExtrasSemaine] = useState([])\n  const [extrasSemaineCat, setExtrasSemaineCat] = useState([])\n  const [extrasSemaineJob, setExtrasSemaineJob] = useState([])\n  const [extrasMois, setExtrasMois] = useState([])\n  const [extrasMoisCat, setExtrasMoisCat] = useState([])\n  const [extrasMoisJob, setExtrasMoisJob] = useState([])\n  const [extrasAll, setExtrasAll] = useState([])\n  const [extrasAllCat, setExtrasAllCat] = useState([])\n  const [extrasAllJob, setExtrasAllJob] = useState([])\n  const [offers24Cat, setOffers24Cat] = useState([])\n  const [offers24Job, setOffers24Job] = useState([])\n  const [offersSemaineCat, setOffersSemaineCat] = useState([])\n  const [offersSemaineJob, setOffersSemaineJob] = useState([])\n  const [offersMoisCat, setOffersMoisCat] = useState([])\n  const [offersMoisJob, setOffersMoisJob] = useState([])\n  const [offersAllCat, setOffersAllCat] = useState([])\n  const [offersAllJob, setOffersAllJob] = useState([])\n  const [offers24State, setOffers24State] = useState([])\n  const [offersSemaineState, setOffersSemaineState] = useState([])\n  const [offersMoisState, setOffersMoisState] = useState([])\n  const [offersAllState, setOffersAllState] = useState([])\n  const [missions24Cat, setMissions24Cat] = useState([])\n  const [missions24Job, setMissions24Job] = useState([])\n  const [missionsSemaineCat, setMissionsSemaineCat] = useState([])\n  const [missionsSemaineJob, setMissionsSemaineJob] = useState([])\n  const [missionsMoisCat, setMissionsMoisCat] = useState([])\n  const [missionsMoisJob, setMissionsMoisJob] = useState([])\n  const [missionsAllCat, setMissionsAllCat] = useState([])\n  const [missionsAllJob, setMissionsAllJob] = useState([])\n  const [missions24State, setMissions24State] = useState([])\n  const [missionsSemaineState, setMissionsSemaineState] = useState([])\n  const [missionsMoisState, setMissionsMoisState] = useState([])\n  const [missionsAllState, setMissionsAllState] = useState([])\n  const [missions, setMissions] = useState([])\n  const [missionsValidateAll, setMissionsValidateAll] = useState([])\n  const [missionsValidateExtra, setMissionsValidateExtra] = useState([])\n  const [missionsValidateEmployeur, setMissionsValidateEmployeur] = useState([])\n  const [offers, setOffers] = useState([])\n  const [offersValidated, setOffersValidated] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const client = createApolloClient()\n    const today = new Date()\n    const yesterday = new Date()\n    yesterday.setDate(yesterday.getDate() - 1)\n    const oneWeekAgo = new Date()\n    const oneMonthAgo = new Date()\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 8)\n    oneMonthAgo.setDate(oneMonthAgo.getDate() - 31)\n    async function fetchData() {\n      client\n        .query({\n          query: gql`\n            query {\n              mission(limit: 10000) {\n                id\n                datePublication\n                category\n                job\n                isValidateByExtra\n                isValidateByCompany\n              }\n            }\n          `,\n        })\n        .then((result) => {\n          const missions = result.data.mission\n          setMissions(missions)\n          const missionsBoth = missions.filter((x) => {\n            return x.isValidateByExtra && x.isValidateByCompany\n          })\n          const missionsExtra = missions.filter((x) => {\n            return x.isValidateByExtra && !x.isValidateByCompany\n          })\n          const missionsEmployeur = missions.filter((x) => {\n            return !x.isValidateByExtra && x.isValidateByCompany\n          })\n          setMissionsValidateAll(missionsBoth)\n          setMissionsValidateEmployeur(missionsEmployeur)\n          setMissionsValidateExtra(missionsExtra)\n          const missionsDay = missions.filter((x) => {\n            return new Date(x.datePublication).getTime() > yesterday.getTime()\n          })\n          const missionsWeek = missions.filter((x) => {\n            return (\n              new Date(x.datePublication).getTime() < today.getTime() &&\n              new Date(x.datePublication).getTime() > oneWeekAgo.getTime()\n            )\n          })\n          const missionsMois = missions.filter((x) => {\n            return (\n              new Date(x.datePublication).getTime() < today.getTime() &&\n              new Date(x.datePublication).getTime() > oneMonthAgo.getTime()\n            )\n          })\n          const missionsAll = missions.filter((x) => {\n            return new Date(x.datePublication).getTime() < today.getTime()\n          })\n          const missionGroupByCategory24 = missionsDay.reduce((group, product) => {\n            const { category } = product\n            group[category] = group[category] ?? []\n            group[category].push(product)\n            return group\n          }, {})\n          const missionGroupByCategorySemaine = missionsWeek.reduce((group, product) => {\n            const { category } = product\n            group[category] = group[category] ?? []\n            group[category].push(product)\n            return group\n          }, {})\n          const missionGroupByCategoryMois = missionsMois.reduce((group, product) => {\n            const { category } = product\n            group[category] = group[category] ?? []\n            group[category].push(product)\n            return group\n          }, {})\n          const missionGroupByCategoryAll = missionsAll.reduce((group, product) => {\n            const { category } = product\n            group[category] = group[category] ?? []\n            group[category].push(product)\n            return group\n          }, {})\n          const missionGroupByJob24 = missionsDay.reduce((group, product) => {\n            const { job } = product\n            group[job] = group[job] ?? []\n            group[job].push(product)\n            return group\n          }, {})\n          const missionGroupByJobSemaine = missionsWeek.reduce((group, product) => {\n            const { job } = product\n            group[job] = group[job] ?? []\n            group[job].push(product)\n            return group\n          }, {})\n          const missionGroupByJobMois = missionsMois.reduce((group, product) => {\n            const { job } = product\n            group[job] = group[job] ?? []\n            group[job].push(product)\n            return group\n          }, {})\n          const missionGroupByJobAll = missionsAll.reduce((group, product) => {\n            const { job } = product\n            group[job] = group[job] ?? []\n            group[job].push(product)\n            return group\n          }, {})\n          setMissions24Cat(missionGroupByCategory24)\n          setMissionsSemaineCat(missionGroupByCategorySemaine)\n          setMissionsMoisCat(missionGroupByCategoryMois)\n          setMissionsAllCat(missionGroupByCategoryAll)\n          setMissions24Job(missionGroupByJob24)\n          setMissionsSemaineJob(missionGroupByJobSemaine)\n          setMissionsMoisJob(missionGroupByJobMois)\n          setMissionsAllJob(missionGroupByJobAll)\n          setMissions24State(missionsDay)\n          setMissionsSemaineState(missionsWeek)\n          setMissionsMoisState(missionsMois)\n          setMissionsAllState(missionsAll)\n        })\n      client\n        .query({\n          query: gql`\n            query {\n              offer(limit: 10000) {\n                id\n                publicationDate\n                category\n                job\n                isValidate\n              }\n            }\n          `,\n        })\n        .then((result) => {\n          const offers = result.data.offer\n          setOffers(offers)\n          const offersValid = offers.filter((x) => {\n            return x.isValidate\n          })\n          setOffersValidated(offersValid)\n          const offersDay = offers.filter((x) => {\n            return new Date(x.publicationDate).getTime() > yesterday.getTime()\n          })\n          const offersWeek = offers.filter((x) => {\n            return (\n              new Date(x.publicationDate).getTime() < today.getTime() &&\n              new Date(x.publicationDate).getTime() > oneWeekAgo.getTime()\n            )\n          })\n          const offersMois = offers.filter((x) => {\n            return (\n              new Date(x.publicationDate).getTime() < today.getTime() &&\n              new Date(x.publicationDate).getTime() > oneMonthAgo.getTime()\n            )\n          })\n          const offersAll = offers.filter((x) => {\n            return new Date(x.publicationDate).getTime() < today.getTime()\n          })\n          const offerGroupByCategory24 = offersDay.reduce((group, product) => {\n            const { category } = product\n            group[category] = group[category] ?? []\n            group[category].push(product)\n            return group\n          }, {})\n          const offerGroupByCategorySemaine = offersWeek.reduce((group, product) => {\n            const { category } = product\n            group[category] = group[category] ?? []\n            group[category].push(product)\n            return group\n          }, {})\n          const offerGroupByCategoryMois = offersMois.reduce((group, product) => {\n            const { category } = product\n            group[category] = group[category] ?? []\n            group[category].push(product)\n            return group\n          }, {})\n          const offerGroupByCategoryAll = offersAll.reduce((group, product) => {\n            const { category } = product\n            group[category] = group[category] ?? []\n            group[category].push(product)\n            return group\n          }, {})\n          const offerGroupByJob24 = offersDay.reduce((group, product) => {\n            const { job } = product\n            group[job] = group[job] ?? []\n            group[job].push(product)\n            return group\n          }, {})\n          const offerGroupByJobSemaine = offersWeek.reduce((group, product) => {\n            const { job } = product\n            group[job] = group[job] ?? []\n            group[job].push(product)\n            return group\n          }, {})\n          const offerGroupByJobMois = offersMois.reduce((group, product) => {\n            const { job } = product\n            group[job] = group[job] ?? []\n            group[job].push(product)\n            return group\n          }, {})\n          const offerGroupByJobAll = offersAll.reduce((group, product) => {\n            const { job } = product\n            group[job] = group[job] ?? []\n            group[job].push(product)\n            return group\n          }, {})\n          setOffers24Cat(offerGroupByCategory24)\n          setOffersSemaineCat(offerGroupByCategorySemaine)\n          setOffersMoisCat(offerGroupByCategoryMois)\n          setOffersAllCat(offerGroupByCategoryAll)\n          setOffers24Job(offerGroupByJob24)\n          setOffersSemaineJob(offerGroupByJobSemaine)\n          setOffersMoisJob(offerGroupByJobMois)\n          setOffersAllJob(offerGroupByJobAll)\n          setOffers24State(offersDay)\n          setOffersSemaineState(offersWeek)\n          setOffersMoisState(offersMois)\n          setOffersAllState(offersAll)\n        })\n      client\n        .query({\n          query: gql`\n            query {\n              user(where: { type: { _eq: \"EMPLOYER\" } }, limit: 10000) {\n                id\n                postalCode\n                category\n                company {\n                  id\n                }\n              }\n            }\n          `,\n        })\n        .then((result) => {\n          const actifsRef = ref(db, 'checkStatus')\n          onValue(actifsRef, (snapshot) => {\n            const data = snapshot.val()\n            const comptesActifs = []\n            Object.keys(data).forEach((x) => {\n              if (data[x].status) {\n                comptesActifs.push({ uid: x, type: data[x].type })\n              }\n            })\n            console.log('comptesActifs', comptesActifs)\n            setActifs(comptesActifs)\n          })\n          const usersInWork = result.data.user\n          const usersListRef = ref(db, 'usersList')\n          onValue(usersListRef, (snapshot) => {\n            const data = snapshot.val()\n            const firebase24 = data.filter((x) => {\n              return new Date(x.metadata.creationTime).getTime() > yesterday.getTime()\n            })\n            const firebaseSemaine = data.filter((x) => {\n              return (\n                new Date(x.metadata.creationTime).getTime() < today.getTime() &&\n                new Date(x.metadata.creationTime).getTime() > oneWeekAgo.getTime()\n              )\n            })\n            const firebaseMois = data.filter((x) => {\n              return (\n                new Date(x.metadata.creationTime).getTime() < today.getTime() &&\n                new Date(x.metadata.creationTime).getTime() > oneMonthAgo.getTime()\n              )\n            })\n            const firebaseAll = data.filter((x) => {\n              return new Date(x.metadata.creationTime).getTime() < today.getTime()\n            })\n            const firebaseUsers24 = firebase24.map((x) => x.uid)\n            let usersInWork24 = usersInWork.filter((x) => {\n              return firebaseUsers24.includes(x.id)\n            })\n            const firebaseUsersSemaine = firebaseSemaine.map((x) => x.uid)\n            let usersInWorkSemaine = usersInWork.filter((x) => {\n              return firebaseUsersSemaine.includes(x.id)\n            })\n            const firebaseUsersMois = firebaseMois.map((x) => x.uid)\n            let usersInWorkMois = usersInWork.filter((x) => {\n              return firebaseUsersMois.includes(x.id)\n            })\n            const firebaseUsersAll = firebaseAll.map((x) => x.uid)\n            let usersInWorkAll = usersInWork.filter((x) => {\n              return firebaseUsersAll.includes(x.id)\n            })\n            setExtras24(usersInWork24)\n            setExtrasSemaine(usersInWorkSemaine)\n            setExtrasMois(usersInWorkMois)\n            setExtrasAll(usersInWorkAll)\n\n            const groupBydep24 = usersInWork24.reduce((group, product) => {\n              const { postalCode } = product\n              const dep = postalCode ? postalCode.toString().substring(0, 2) : 'nc'\n              group[departement[dep]] = group[departement[dep]] ?? []\n              group[departement[dep]].push(product)\n              return group\n            }, {})\n            const groupBydepSemaine = usersInWorkSemaine.reduce((group, product) => {\n              const { postalCode } = product\n              const dep = postalCode ? postalCode.toString().substring(0, 2) : 'nc'\n              group[departement[dep]] = group[departement[dep]] ?? []\n              group[departement[dep]].push(product)\n              return group\n            }, {})\n\n            const groupBydepMois = usersInWorkMois.reduce((group, product) => {\n              const { postalCode } = product\n              const dep = postalCode ? postalCode.toString().substring(0, 2) : 'nc'\n              group[departement[dep]] = group[departement[dep]] ?? []\n              group[departement[dep]].push(product)\n              return group\n            }, {})\n\n            const groupBydepAll = usersInWorkAll.reduce((group, product) => {\n              const { postalCode } = product\n              const dep = postalCode ? postalCode.toString().substring(0, 2) : 'nc'\n              group[departement[dep]] = group[departement[dep]] ?? []\n              group[departement[dep]].push(product)\n              return group\n            }, {})\n            const groupByCategory24 = usersInWork24.reduce((group, product) => {\n              const { category } = product\n              group[category] = group[category] ?? []\n              group[category].push(product)\n              return group\n            }, {})\n            const groupByCategorySemaine = usersInWorkSemaine.reduce((group, product) => {\n              const { category } = product\n              group[category] = group[category] ?? []\n              group[category].push(product)\n              return group\n            }, {})\n            const groupByCategoryMois = usersInWorkMois.reduce((group, product) => {\n              const { category } = product\n              group[category] = group[category] ?? []\n              group[category].push(product)\n              return group\n            }, {})\n            const groupByCategoryAll = usersInWorkAll.reduce((group, product) => {\n              const { category } = product\n              group[category] = group[category] ?? []\n              group[category].push(product)\n              return group\n            }, {})\n            setExtras24Cat(groupByCategory24)\n            setExtrasSemaineCat(groupByCategorySemaine)\n            setExtrasMoisCat(groupByCategoryMois)\n            setExtrasAllCat(groupByCategoryAll)\n            setExtras24Dep(groupBydep24)\n            setExtrasSemaineDep(groupBydepSemaine)\n            setExtrasMoisDep(groupBydepMois)\n            setExtrasAllDep(groupBydepAll)\n          })\n        })\n      setTimeout(() => {\n        setLoading(false)\n      }, 1000)\n    }\n    fetchData()\n  }, [])\n\n  const createApolloClient = () => {\n    const httpLink = new HttpLink({\n      uri: GRAPHQL_ENDPOINT,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n    })\n\n    const wsLink = new WebSocketLink({\n      uri: GRAPHQL_SUBSCRIPTIONS,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n      options: {\n        reconnect: true,\n      },\n    })\n\n    const splitLink = split(\n      ({ query }) => {\n        const definition = getMainDefinition(query)\n        return definition.kind === 'OperationDefinition' && definition.operation === 'subscription'\n      },\n      wsLink,\n      httpLink,\n    )\n\n    return new ApolloClient({\n      link: splitLink,\n      cache: new InMemoryCache(),\n    })\n  }\n\n  return loading ? (\n    <CRow className=\"justify-content-center\">\n      <CCol className=\"p-4\" xs={6}>\n        <TailSpin height=\"100\" width=\"100\" color=\"grey\" ariaLabel=\"loading\" />\n      </CCol>\n    </CRow>\n  ) : (\n    <>\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(0)}\n            active={mode == 0 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 0 ? '#2500D2' : 'black' }}\n          >\n            Dernieres 24h\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(1)}\n            active={mode == 1 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 1 ? '#2500D2' : 'black' }}\n          >\n            Semaine\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(2)}\n            active={mode == 2 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 2 ? '#2500D2' : 'black' }}\n          >\n            Mois\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(3)}\n            active={mode == 3 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 3 ? '#2500D2' : 'black' }}\n          >\n            Total\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(4)}\n            active={mode == 4 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 4 ? '#2500D2' : 'black' }}\n          >\n            Statistiques générales\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      {mode == 0 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre employeurs inscrits : {extras24.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Employeurs inscrits par catégorie</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extras24Cat),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extras24Cat).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras inscrits par Département</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extras24Dep),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extras24Dep).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre offres publiées : {offers24State.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            {offers24State.length > 0 && (\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Offres publiées par catégorie</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(offers24Cat),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(offers24Cat).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            )}\n            {offers24State.length > 0 && (\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Offres publiées par job</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(offers24Job),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(offers24Job).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            )}\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre missions publiées : {missions24State.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            {missions24State.length > 0 && (\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Missions publiées par catégorie</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(missions24Cat),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(missions24Cat).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            )}\n            {missions24State.length > 0 && (\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Missions publiées par job</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(missions24Job),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(missions24Job).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            )}\n          </CRow>\n        </>\n      )}\n      {mode == 1 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre employeurs inscrits : {extrasSemaine.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Employeurs inscrits par catégorie</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasSemaineCat),\n                      datasets: [\n                        {\n                          backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16'],\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasSemaineCat).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras inscrits par Département</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasSemaineDep),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasSemaineDep).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre offres publiées : {offersSemaineState.length}</div>\n            </CCol>\n          </CRow>\n          {offersSemaineState.length > 0 && (\n            <CRow>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Offres publiées par catégorie</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(offersSemaineCat),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(offersSemaineCat).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Offres publiées par job</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(offersSemaineJob),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(offersSemaineJob).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          )}\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre missions publiées : {missionsSemaineState.length}</div>\n            </CCol>\n          </CRow>\n          {missionsSemaineState.length > 0 && (\n            <CRow>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Missions publiées par catégorie</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(missionsSemaineCat),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(missionsSemaineCat).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Missions publiées par job</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(missionsSemaineJob),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(missionsSemaineJob).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          )}\n        </>\n      )}\n      {mode == 2 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre employeurs inscrits : {extrasMois.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Employeurs inscrits par catégorie</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasMoisCat),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasMoisCat).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras inscrits par Département</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasMoisDep),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasMoisDep).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre offres publiées : {offersMoisState.length}</div>\n            </CCol>\n          </CRow>\n          {offersMoisState.length > 0 && (\n            <CRow>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Offres publiées par catégorie</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(offersMoisCat),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(offersMoisCat).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Offres publiées par job</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(offersMoisJob),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(offersMoisJob).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          )}\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre missions publiées : {missionsMoisState.length}</div>\n            </CCol>\n          </CRow>\n          {missionsMoisState.length > 0 && (\n            <CRow>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Missions publiées par catégorie</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(missionsMoisCat),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(missionsMoisCat).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Missions publiées par job</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(missionsMoisJob),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(missionsMoisJob).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          )}\n        </>\n      )}\n      {mode == 3 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre employeurs inscrits : {extrasAll.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Employeurs inscrits par catégorie</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasAllCat),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasAllCat).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras inscrits par Département</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasAllDep),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasAllDep).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre offres publiées : {offersAllState.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Offres publiées par catégorie</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(offersAllCat),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(offersAllCat).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Offres publiées par job</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(offersAllJob),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(offersAllJob).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre missions publiées : {missionsAllState.length}</div>\n            </CCol>\n          </CRow>\n          {missionsAllState.length > 0 && (\n            <CRow>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Missions publiées par catégorie</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(missionsAllCat),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(missionsAllCat).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n              <CCol xs={6}>\n                <CCard className=\"mb-4 mt-4\">\n                  <CCardHeader>Missions publiées par job</CCardHeader>\n                  <CCardBody>\n                    <CChartDoughnut\n                      data={{\n                        labels: Object.keys(missionsAllJob),\n                        datasets: [\n                          {\n                            backgroundColor: [\n                              '#41B883',\n                              '#E46651',\n                              '#00D8FF',\n                              '#DD1B16',\n                              '#FF0000',\n                              '#800000',\n                              '#808000',\n                              '#00FF00',\n                              '#008000',\n                              '#808080',\n                              '#0000FF',\n                              '#000080',\n                              '#FF00FF',\n                              '#800080',\n                            ],\n                            data: Object.values(missionsAllJob).map((x) => x.length),\n                          },\n                        ],\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          )}\n        </>\n      )}\n      {mode == 4 && (\n        <CRow>\n          <CCol xs={6}>\n            <div className=\"mt-4\">Nombre missions enregistrées : {missions.length}</div>\n            <div className=\"mt-4\">\n              Nombre missions validées par employeur et extra : {missionsValidateAll.length}\n            </div>\n            <div className=\"mt-4\">\n              Nombre missions validées par employeur seulement : {missionsValidateEmployeur.length}\n            </div>\n            <div className=\"mt-4\">\n              Nombre missions validées par extra seulement : {missionsValidateExtra.length}\n            </div>\n            <div className=\"mt-4\">Nombre offres enregistrées : {offers.length}</div>\n            <div className=\"mt-4\">Nombre offres validées : {offersValidated.length}</div>\n            <div className=\"mt-4\">Nombre comptes actifs : {actifs.length}</div>\n            <div className=\"mt-4\">\n              Actifs IOS:{' '}\n              {\n                actifs.filter((x) =>\n                  [\n                    'com.unextra.unextraapp.subscribe',\n                    'com.unextra.unextraapp.flasher',\n                    'com.unextra.unextraapp.pro',\n                  ].includes(x.type),\n                ).length\n              }\n            </div>\n            <div className=\"mt-1\" style={{ fontSize: 14 }}>\n              Flash:{' '}\n              {actifs.filter((x) => ['com.unextra.unextraapp.flasher'].includes(x.type)).length}\n            </div>\n            <div className=\"mt-1\" style={{ fontSize: 14 }}>\n              Actifs classique:{' '}\n              {actifs.filter((x) => ['com.unextra.unextraapp.subscribe'].includes(x.type)).length}\n            </div>\n            <div className=\"mt-1\" style={{ fontSize: 14 }}>\n              Actifs pro:{' '}\n              {actifs.filter((x) => ['com.unextra.unextraapp.pro'].includes(x.type)).length}\n            </div>\n            <div className=\"mt-4\">\n              Actifs Android:{' '}\n              {\n                actifs.filter((x) =>\n                  ['unextra.abonnement', 'unextra.pro', 'unextra.flash'].includes(x.type),\n                ).length\n              }\n            </div>\n            <div className=\"mt-1\" style={{ fontSize: 14 }}>\n              Flash: {actifs.filter((x) => ['unextra.flash'].includes(x.type)).length}\n            </div>\n            <div className=\"mt-1\" style={{ fontSize: 14 }}>\n              Actifs classique:{' '}\n              {actifs.filter((x) => ['unextra.abonnement'].includes(x.type)).length}\n            </div>\n            <div className=\"mt-1\" style={{ fontSize: 14 }}>\n              Actifs pro: {actifs.filter((x) => ['unextra.pro'].includes(x.type)).length}\n            </div>\n            <div className=\"mt-4\">\n              Actifs abonné depuis web: {actifs.filter((x) => x.type == 'Abonnement web').length}\n            </div>\n            <div className=\"mt-1\">\n              Actifs flash depuis web: {actifs.filter((x) => x.type == 'Flash web').length}\n            </div>\n          </CCol>\n        </CRow>\n      )}\n    </>\n  )\n}\n\nexport default Employeurs\n","import React, { lazy, useEffect, useState } from 'react'\nimport { ApolloClient, InMemoryCache, HttpLink, split, gql } from '@apollo/client'\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { WebSocketLink } from '@apollo/client/link/ws'\nimport { TailSpin } from 'react-loader-spinner'\n\nimport { CNav, CNavItem, CNavLink, CCol, CCard, CCardHeader, CCardBody, CRow } from '@coreui/react'\nimport { CChartDoughnut } from '@coreui/react-chartjs'\n\nimport { getDatabase, ref, onValue } from 'firebase/database'\nimport { departement } from 'src/utils/utils.js'\n\nexport const GRAPHQL_ENDPOINT = 'https://unextra.hasura.app/v1/graphql'\nexport const GRAPHQL_SUBSCRIPTIONS = 'wss://unextra.hasura.app/v1/graphql'\nexport const SECRET_KEY = '2tGF4WeLMIOsP/Q/h/VS2cd++EmJzMcb'\nexport const AUTH_JWT =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsiYW5vbnltb3VzIl0sIngtaGFzdXJhLWRlZmF1bHQtcm9sZSI6ImFub255bW91cyJ9fQ.HM2vL95bDWL2xTMwCXXDatxlfLMd_8-Mx1ymyMiCKb4'\n\nconst db = getDatabase()\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst ExtrasPro = () => {\n  const [mode, setMode] = useState(0)\n  const [extras24, setExtras24] = useState([])\n  const [extras24Cat, setExtras24Cat] = useState([])\n  const [extras24Job, setExtras24Job] = useState([])\n  const [extrasSemaine, setExtrasSemaine] = useState([])\n  const [extrasSemaineCat, setExtrasSemaineCat] = useState([])\n  const [extrasSemaineJob, setExtrasSemaineJob] = useState([])\n  const [extrasMois, setExtrasMois] = useState([])\n  const [extrasMoisCat, setExtrasMoisCat] = useState([])\n  const [extrasMoisJob, setExtrasMoisJob] = useState([])\n  const [extrasAll, setExtrasAll] = useState([])\n  const [extrasAllCat, setExtrasAllCat] = useState([])\n  const [extrasAllJob, setExtrasAllJob] = useState([])\n  const [extras24Dep, setExtras24Dep] = useState([])\n  const [extrasSemaineDep, setExtrasSemaineDep] = useState([])\n  const [extrasMoisDep, setExtrasMoisDep] = useState([])\n  const [extrasAllDep, setExtrasAllDep] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const client = createApolloClient()\n    async function fetchData() {\n      const extras = await client.query({\n        query: gql`\n          query {\n            extra(where: { isPro: { _eq: true } }, limit: 10000) {\n              id\n              job\n              isPro\n            }\n          }\n        `,\n      })\n\n      const extrasData = extras.data.extra\n\n      const objExtras = {}\n\n      extrasData.forEach((element) => {\n        objExtras[element.id] = element.job\n      })\n\n      client\n        .query({\n          query: gql`\n            query {\n              user(limit: 100000) {\n                id\n                idExtra\n                category\n                gender\n                postalCode\n                company {\n                  id\n                  latitude\n                }\n              }\n            }\n          `,\n        })\n        .then((result) => {\n          let usersInWork = result.data.user\n          usersInWork = usersInWork.filter((x) => objExtras[x.idExtra])\n          const today = new Date()\n          const yesterday = new Date()\n          yesterday.setDate(yesterday.getDate() - 1)\n          const oneWeekAgo = new Date()\n          const oneMonthAgo = new Date()\n          oneWeekAgo.setDate(oneWeekAgo.getDate() - 8)\n          oneMonthAgo.setDate(oneMonthAgo.getDate() - 31)\n          const usersListRef = ref(db, 'usersList')\n          onValue(usersListRef, (snapshot) => {\n            const data = snapshot.val()\n            const firebase24 = data.filter((x) => {\n              return new Date(x.metadata.creationTime).getTime() > yesterday.getTime()\n            })\n            const firebaseSemaine = data.filter((x) => {\n              return (\n                new Date(x.metadata.creationTime).getTime() < today.getTime() &&\n                new Date(x.metadata.creationTime).getTime() > oneWeekAgo.getTime()\n              )\n            })\n            const firebaseMois = data.filter((x) => {\n              return (\n                new Date(x.metadata.creationTime).getTime() < today.getTime() &&\n                new Date(x.metadata.creationTime).getTime() > oneMonthAgo.getTime()\n              )\n            })\n            const firebaseAll = data.filter((x) => {\n              return new Date(x.metadata.creationTime).getTime() < today.getTime()\n            })\n            const firebaseUsers24 = firebase24.map((x) => x.uid)\n            let usersInWork24 = usersInWork.filter((x) => {\n              return firebaseUsers24.includes(x.id) && x.company == null\n            })\n            const firebaseUsersSemaine = firebaseSemaine.map((x) => x.uid)\n            let usersInWorkSemaine = usersInWork.filter((x) => {\n              return firebaseUsersSemaine.includes(x.id) && x.company == null\n            })\n            const firebaseUsersMois = firebaseMois.map((x) => x.uid)\n            let usersInWorkMois = usersInWork.filter((x) => {\n              return firebaseUsersMois.includes(x.id) && x.company == null\n            })\n            const firebaseUsersAll = firebaseAll.map((x) => x.uid)\n            let usersInWorkAll = usersInWork.filter((x) => {\n              return firebaseUsersAll.includes(x.id) && x.company == null\n            })\n            usersInWork24 = usersInWork24.map((x) => ({ ...x, job: objExtras[x.idExtra] }))\n            usersInWorkSemaine = usersInWorkSemaine.map((x) => ({\n              ...x,\n              job: objExtras[x.idExtra],\n            }))\n            usersInWorkMois = usersInWorkMois.map((x) => ({\n              ...x,\n              job: objExtras[x.idExtra],\n            }))\n            usersInWorkAll = usersInWorkAll.map((x) => ({\n              ...x,\n              job: objExtras[x.idExtra],\n            }))\n            setExtras24(usersInWork24)\n            setExtrasSemaine(usersInWorkSemaine)\n            setExtrasMois(usersInWorkMois)\n            setExtrasAll(usersInWorkAll)\n            const groupByCategory24 = usersInWork24.reduce((group, product) => {\n              const { category } = product\n              group[category] = group[category] ?? []\n              group[category].push(product)\n              return group\n            }, {})\n            const groupByCategorySemaine = usersInWorkSemaine.reduce((group, product) => {\n              const { category } = product\n              group[category] = group[category] ?? []\n              group[category].push(product)\n              return group\n            }, {})\n            const groupBydep24 = usersInWork24.reduce((group, product) => {\n              const { postalCode } = product\n              const dep = postalCode ? postalCode.toString().substring(0, 2) : 'nc'\n              group[departement[dep]] = group[departement[dep]] ?? []\n              group[departement[dep]].push(product)\n              return group\n            }, {})\n            const groupBydepSemaine = usersInWorkSemaine.reduce((group, product) => {\n              const { postalCode } = product\n              const dep = postalCode ? postalCode.toString().substring(0, 2) : 'nc'\n              group[departement[dep]] = group[departement[dep]] ?? []\n              group[departement[dep]].push(product)\n              return group\n            }, {})\n\n            const groupBydepMois = usersInWorkMois.reduce((group, product) => {\n              const { postalCode } = product\n              const dep = postalCode ? postalCode.toString().substring(0, 2) : 'nc'\n              group[departement[dep]] = group[departement[dep]] ?? []\n              group[departement[dep]].push(product)\n              return group\n            }, {})\n\n            const groupBydepAll = usersInWorkAll.reduce((group, product) => {\n              const { postalCode } = product\n              const dep = postalCode ? postalCode.toString().substring(0, 2) : 'nc'\n              group[departement[dep]] = group[departement[dep]] ?? []\n              group[departement[dep]].push(product)\n              return group\n            }, {})\n            const groupByCategoryMois = usersInWorkMois.reduce((group, product) => {\n              const { category } = product\n              group[category] = group[category] ?? []\n              group[category].push(product)\n              return group\n            }, {})\n            const groupByCategoryAll = usersInWorkAll.reduce((group, product) => {\n              const { category } = product\n              group[category] = group[category] ?? []\n              group[category].push(product)\n              return group\n            }, {})\n            const groupByJob24 = usersInWork24.reduce((group, product) => {\n              const { job } = product\n              group[job] = group[job] ?? []\n              group[job].push(product)\n              return group\n            }, {})\n            const groupByJobSemaine = usersInWorkSemaine.reduce((group, product) => {\n              const { job } = product\n              group[job] = group[job] ?? []\n              group[job].push(product)\n              return group\n            }, {})\n            const groupByJobMois = usersInWorkMois.reduce((group, product) => {\n              const { job } = product\n              group[job] = group[job] ?? []\n              group[job].push(product)\n              return group\n            }, {})\n            const groupByJobAll = usersInWorkAll.reduce((group, product) => {\n              const { job } = product\n              group[job] = group[job] ?? []\n              group[job].push(product)\n              return group\n            }, {})\n            setExtras24Job(groupByJob24)\n            setExtras24Cat(groupByCategory24)\n            setExtrasSemaineJob(groupByJobSemaine)\n            setExtrasSemaineCat(groupByCategorySemaine)\n            setExtrasMoisJob(groupByJobMois)\n            setExtrasMoisCat(groupByCategoryMois)\n            setExtrasAllJob(groupByJobAll)\n            setExtrasAllCat(groupByCategoryAll)\n            setExtras24Dep(groupBydep24)\n            setExtrasSemaineDep(groupBydepSemaine)\n            setExtrasMoisDep(groupBydepMois)\n            setExtrasAllDep(groupBydepAll)\n          })\n        })\n      setTimeout(() => {\n        setLoading(false)\n      }, 1000)\n    }\n    fetchData()\n  }, [])\n  const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const createApolloClient = () => {\n    const httpLink = new HttpLink({\n      uri: GRAPHQL_ENDPOINT,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n    })\n\n    const wsLink = new WebSocketLink({\n      uri: GRAPHQL_SUBSCRIPTIONS,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n      options: {\n        reconnect: true,\n      },\n    })\n\n    const splitLink = split(\n      ({ query }) => {\n        const definition = getMainDefinition(query)\n        return definition.kind === 'OperationDefinition' && definition.operation === 'subscription'\n      },\n      wsLink,\n      httpLink,\n    )\n\n    return new ApolloClient({\n      link: splitLink,\n      cache: new InMemoryCache(),\n    })\n  }\n\n  return loading ? (\n    <CRow className=\"justify-content-center\">\n      <CCol className=\"p-4\" xs={6}>\n        <TailSpin height=\"100\" width=\"100\" color=\"grey\" ariaLabel=\"loading\" />\n      </CCol>\n    </CRow>\n  ) : (\n    <>\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(0)}\n            active={mode == 0 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 0 ? '#2500D2' : 'black' }}\n          >\n            Dernieres 24h\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(1)}\n            active={mode == 1 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 1 ? '#2500D2' : 'black' }}\n          >\n            Semaine\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(2)}\n            active={mode == 2 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 2 ? '#2500D2' : 'black' }}\n          >\n            Mois\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(3)}\n            active={mode == 3 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 3 ? '#2500D2' : 'black' }}\n          >\n            Total\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      {mode == 0 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre extras pro inscrits : {extras24.length}</div>\n            </CCol>\n          </CRow>\n          {extras24.length > 0 && (\n            <>\n              <CRow>\n                <CCol xs={6}>\n                  <CCard className=\"mb-4 mt-4\">\n                    <CCardHeader>Extras pro inscrits par catégorie</CCardHeader>\n                    <CCardBody>\n                      <CChartDoughnut\n                        data={{\n                          labels: Object.keys(extras24Cat),\n                          datasets: [\n                            {\n                              backgroundColor: [\n                                '#41B883',\n                                '#E46651',\n                                '#00D8FF',\n                                '#DD1B16',\n                                '#FF0000',\n                                '#800000',\n                                '#808000',\n                                '#00FF00',\n                                '#008000',\n                                '#808080',\n                                '#0000FF',\n                                '#000080',\n                                '#FF00FF',\n                                '#800080',\n                              ],\n                              data: Object.values(extras24Cat).map((x) => x.length),\n                            },\n                          ],\n                        }}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n                <CCol xs={6}>\n                  <CCard className=\"mb-4 mt-4\">\n                    <CCardHeader>Extras pro inscrits par job</CCardHeader>\n                    <CCardBody>\n                      <CChartDoughnut\n                        data={{\n                          labels: Object.keys(extras24Job),\n                          datasets: [\n                            {\n                              backgroundColor: [\n                                '#41B883',\n                                '#E46651',\n                                '#00D8FF',\n                                '#DD1B16',\n                                '#FF0000',\n                                '#800000',\n                                '#808000',\n                                '#00FF00',\n                                '#008000',\n                                '#808080',\n                                '#0000FF',\n                                '#000080',\n                                '#FF00FF',\n                                '#800080',\n                              ],\n                              data: Object.values(extras24Job).map((x) => x.length),\n                            },\n                          ],\n                        }}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={6}>\n                  <CCard className=\"mb-4 mt-4\">\n                    <CCardHeader>Extras inscrits par Département</CCardHeader>\n                    <CCardBody>\n                      <CChartDoughnut\n                        data={{\n                          labels: Object.keys(extras24Dep),\n                          datasets: [\n                            {\n                              backgroundColor: [\n                                '#41B883',\n                                '#E46651',\n                                '#00D8FF',\n                                '#DD1B16',\n                                '#FF0000',\n                                '#800000',\n                                '#808000',\n                                '#00FF00',\n                                '#008000',\n                                '#808080',\n                                '#0000FF',\n                                '#000080',\n                                '#FF00FF',\n                                '#800080',\n                              ],\n                              data: Object.values(extras24Dep).map((x) => x.length),\n                            },\n                          ],\n                        }}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </>\n          )}\n        </>\n      )}\n      {mode == 1 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre extras pro inscrits : {extrasSemaine.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras pro inscrits par catégorie</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasSemaineCat),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasSemaineCat).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras pro inscrits par job</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasSemaineJob),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasSemaineJob).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras inscrits par Département</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasSemaineDep),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasSemaineDep).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        </>\n      )}\n      {mode == 2 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre extras pro inscrits : {extrasMois.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras pro inscrits par catégorie</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasMoisCat),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasMoisCat).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras pro inscrits par job</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasMoisJob),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasMoisJob).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras inscrits par Département</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasMoisDep),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasMoisDep).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        </>\n      )}\n      {mode == 3 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre extras pro inscrits : {extrasAll.length}</div>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras pro inscrits par catégorie</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasAllCat),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasAllCat).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras pro inscrits par job</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasAllJob),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasAllJob).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs={6}>\n              <CCard className=\"mb-4 mt-4\">\n                <CCardHeader>Extras inscrits par Département</CCardHeader>\n                <CCardBody>\n                  <CChartDoughnut\n                    data={{\n                      labels: Object.keys(extrasAllDep),\n                      datasets: [\n                        {\n                          backgroundColor: [\n                            '#41B883',\n                            '#E46651',\n                            '#00D8FF',\n                            '#DD1B16',\n                            '#FF0000',\n                            '#800000',\n                            '#808000',\n                            '#00FF00',\n                            '#008000',\n                            '#808080',\n                            '#0000FF',\n                            '#000080',\n                            '#FF00FF',\n                            '#800080',\n                          ],\n                          data: Object.values(extrasAllDep).map((x) => x.length),\n                        },\n                      ],\n                    }}\n                  />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ExtrasPro\n","import React, { lazy, useEffect, useState } from 'react'\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n  split,\n  useQuery,\n  gql,\n} from '@apollo/client'\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { WebSocketLink } from '@apollo/client/link/ws'\nimport { TailSpin } from 'react-loader-spinner'\n\nimport { CNav, CNavItem, CNavLink, CCol, CCard, CCardHeader, CCardBody, CRow } from '@coreui/react'\nimport {\n  CChartBar,\n  CChartDoughnut,\n  CChartLine,\n  CChartPie,\n  CChartPolarArea,\n  CChartRadar,\n} from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport { getDatabase, ref, onValue } from 'firebase/database'\n\nexport const GRAPHQL_ENDPOINT = 'https://unextra.hasura.app/v1/graphql'\nexport const GRAPHQL_SUBSCRIPTIONS = 'wss://unextra.hasura.app/v1/graphql'\nexport const SECRET_KEY = '2tGF4WeLMIOsP/Q/h/VS2cd++EmJzMcb'\nexport const AUTH_JWT =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsiYW5vbnltb3VzIl0sIngtaGFzdXJhLWRlZmF1bHQtcm9sZSI6ImFub255bW91cyJ9fQ.HM2vL95bDWL2xTMwCXXDatxlfLMd_8-Mx1ymyMiCKb4'\n\nconst db = getDatabase()\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst InfoG = () => {\n  const [mode, setMode] = useState(0)\n  const [messages24, setMessages24] = useState([])\n  const [messagesSemaine, setMessagesSemaine] = useState([])\n  const [messagesMois, setMessagesMois] = useState([])\n  const [messagesAll, setMessagesAll] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const client = createApolloClient()\n    const today = new Date()\n    const yesterday = new Date()\n    yesterday.setDate(yesterday.getDate() - 1)\n    const oneWeekAgo = new Date()\n    const oneMonthAgo = new Date()\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 8)\n    oneMonthAgo.setDate(oneMonthAgo.getDate() - 31)\n    async function fetchData() {\n      client\n        .query({\n          query: gql`\n            query {\n              messages(limit: 1000000) {\n                id\n                date\n              }\n            }\n          `,\n        })\n        .then((result) => {\n          const messages = result.data.messages\n          const messagesDay = messages.filter((x) => {\n            return new Date(x.date).getTime() > yesterday.getTime()\n          })\n          const messagesWeek = messages.filter((x) => {\n            return (\n              new Date(x.date).getTime() < today.getTime() &&\n              new Date(x.date).getTime() > oneWeekAgo.getTime()\n            )\n          })\n          const messagesMois = messages.filter((x) => {\n            return (\n              new Date(x.date).getTime() < today.getTime() &&\n              new Date(x.date).getTime() > oneMonthAgo.getTime()\n            )\n          })\n          const messagesAll = messages.filter((x) => {\n            return new Date(x.date).getTime() < today.getTime()\n          })\n          setMessages24(messagesDay)\n          setMessagesSemaine(messagesWeek)\n          setMessagesMois(messagesMois)\n          setMessagesAll(messagesAll)\n        })\n      setTimeout(() => {\n        setLoading(false)\n      }, 1000)\n    }\n    fetchData()\n  }, [])\n  const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const createApolloClient = () => {\n    const httpLink = new HttpLink({\n      uri: GRAPHQL_ENDPOINT,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n    })\n\n    const wsLink = new WebSocketLink({\n      uri: GRAPHQL_SUBSCRIPTIONS,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n      options: {\n        reconnect: true,\n      },\n    })\n\n    const splitLink = split(\n      ({ query }) => {\n        const definition = getMainDefinition(query)\n        return definition.kind === 'OperationDefinition' && definition.operation === 'subscription'\n      },\n      wsLink,\n      httpLink,\n    )\n\n    return new ApolloClient({\n      link: splitLink,\n      cache: new InMemoryCache(),\n    })\n  }\n\n  return loading ? (\n    <CRow className=\"justify-content-center\">\n      <CCol className=\"p-4\" xs={6}>\n        <TailSpin height=\"100\" width=\"100\" color=\"grey\" ariaLabel=\"loading\" />\n      </CCol>\n    </CRow>\n  ) : (\n    <>\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(0)}\n            active={mode == 0 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 0 ? '#2500D2' : 'black' }}\n          >\n            Dernieres 24h\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(1)}\n            active={mode == 1 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 1 ? '#2500D2' : 'black' }}\n          >\n            Semaine\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(2)}\n            active={mode == 2 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 2 ? '#2500D2' : 'black' }}\n          >\n            Mois\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink\n            onClick={() => setMode(3)}\n            active={mode == 3 ? true : false}\n            style={{ cursor: 'pointer', color: mode == 3 ? '#2500D2' : 'black' }}\n          >\n            Total\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      {mode == 0 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre messages échangés : {messages24.length}</div>\n            </CCol>\n          </CRow>\n        </>\n      )}\n      {mode == 1 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre messages échangés : {messagesSemaine.length}</div>\n            </CCol>\n          </CRow>\n        </>\n      )}\n      {mode == 2 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre messages échangés : {messagesMois.length}</div>\n            </CCol>\n          </CRow>\n        </>\n      )}\n      {mode == 3 && (\n        <>\n          <CRow>\n            <CCol xs={6}>\n              <div className=\"mt-4\">Nombre messages échangés : {messagesAll.length}</div>\n            </CCol>\n          </CRow>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default InfoG\n","import React, { lazy, useEffect, useState, forwardRef } from 'react'\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n  split,\n  useQuery,\n  gql,\n} from '@apollo/client'\nimport { TailSpin } from 'react-loader-spinner'\n\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { WebSocketLink } from '@apollo/client/link/ws'\nimport { CNav, CNavItem, CNavLink, CCol, CCard, CCardHeader, CCardBody, CRow } from '@coreui/react'\nimport MUIDataTable from 'mui-datatables'\nimport { getDatabase, ref, onValue } from 'firebase/database'\nexport const GRAPHQL_ENDPOINT = 'https://unextra.hasura.app/v1/graphql'\nexport const GRAPHQL_SUBSCRIPTIONS = 'wss://unextra.hasura.app/v1/graphql'\nexport const SECRET_KEY = '2tGF4WeLMIOsP/Q/h/VS2cd++EmJzMcb'\nexport const AUTH_JWT =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsiYW5vbnltb3VzIl0sIngtaGFzdXJhLWRlZmF1bHQtcm9sZSI6ImFub255bW91cyJ9fQ.HM2vL95bDWL2xTMwCXXDatxlfLMd_8-Mx1ymyMiCKb4'\n\nconst db = getDatabase()\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst columns = [\n  {\n    name: 'datePublication',\n    label: 'Date publication',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'dateStart',\n    label: 'Date début',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'category',\n    label: 'categorie',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'job',\n    label: 'job',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'hours',\n    label: 'Heures',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'priceHour',\n    label: 'Prix H',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'city',\n    label: 'ville',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'isValidateByExtra',\n    label: \"Validé par l'extra\",\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'isValidateByCompany',\n    label: \"Validé par l'employeur\",\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n]\n\nconst options = {\n  filterType: 'checkbox',\n}\n\nconst Missions = () => {\n  const [mode, setMode] = useState(0)\n  const [missions, setMissions] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const client = createApolloClient()\n    async function fetchData() {\n      client\n        .query({\n          query: gql`\n            query {\n              mission(limit: 10000) {\n                id\n                datePublication\n                job\n                hours\n                category\n                city\n                dateStart\n                isValidateByExtra\n                isValidateByCompany\n                priceHour\n              }\n            }\n          `,\n        })\n        .then((result) => {\n          let missions = result.data.mission\n            .filter((x) => x.datePublication)\n            .sort((a, b) => new Date(b.datePublication) - new Date(a.datePublication))\n          setMissions(missions)\n        })\n      setTimeout(() => {\n        setLoading(false)\n      }, 1000)\n    }\n    fetchData()\n  }, [])\n  const createApolloClient = () => {\n    const httpLink = new HttpLink({\n      uri: GRAPHQL_ENDPOINT,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n    })\n\n    const wsLink = new WebSocketLink({\n      uri: GRAPHQL_SUBSCRIPTIONS,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n      options: {\n        reconnect: true,\n      },\n    })\n\n    const splitLink = split(\n      ({ query }) => {\n        const definition = getMainDefinition(query)\n        return definition.kind === 'OperationDefinition' && definition.operation === 'subscription'\n      },\n      wsLink,\n      httpLink,\n    )\n\n    return new ApolloClient({\n      link: splitLink,\n      cache: new InMemoryCache(),\n    })\n  }\n\n  return loading ? (\n    <CRow className=\"justify-content-center\">\n      <CCol className=\"p-4\" xs={6}>\n        <TailSpin height=\"100\" width=\"100\" color=\"grey\" ariaLabel=\"loading\" />\n      </CCol>\n    </CRow>\n  ) : (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <MUIDataTable\n            title={'Liste des missions'}\n            data={missions}\n            columns={columns}\n            options={options}\n          />\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Missions\n","import React, { lazy, useEffect, useState, forwardRef } from 'react'\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n  split,\n  useQuery,\n  gql,\n} from '@apollo/client'\nimport { TailSpin } from 'react-loader-spinner'\n\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { WebSocketLink } from '@apollo/client/link/ws'\nimport { CNav, CNavItem, CNavLink, CCol, CCard, CCardHeader, CCardBody, CRow } from '@coreui/react'\nimport MUIDataTable from 'mui-datatables'\nimport { getDatabase, ref, onValue } from 'firebase/database'\nexport const GRAPHQL_ENDPOINT = 'https://unextra.hasura.app/v1/graphql'\nexport const GRAPHQL_SUBSCRIPTIONS = 'wss://unextra.hasura.app/v1/graphql'\nexport const SECRET_KEY = '2tGF4WeLMIOsP/Q/h/VS2cd++EmJzMcb'\nexport const AUTH_JWT =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsiYW5vbnltb3VzIl0sIngtaGFzdXJhLWRlZmF1bHQtcm9sZSI6ImFub255bW91cyJ9fQ.HM2vL95bDWL2xTMwCXXDatxlfLMd_8-Mx1ymyMiCKb4'\n\nconst db = getDatabase()\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst columns = [\n  {\n    name: 'publicationDate',\n    label: 'Date publication',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'dateStart',\n    label: 'Date début',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'category',\n    label: 'categorie',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'job',\n    label: 'job',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'hoursPerWeek',\n    label: 'Heures / semaine',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'salary',\n    label: 'Salaire',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'city',\n    label: 'ville',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: 'isValidate',\n    label: 'Validé',\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n]\n\nconst options = {\n  filterType: 'checkbox',\n}\n\nconst Offres = () => {\n  const [mode, setMode] = useState(0)\n  const [offers, setOffers] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const client = createApolloClient()\n    async function fetchData() {\n      client\n        .query({\n          query: gql`\n            query {\n              offer(limit: 10000) {\n                id\n                publicationDate\n                job\n                hoursPerWeek\n                category\n                city\n                dateStart\n                isValidate\n                salary\n              }\n            }\n          `,\n        })\n        .then((result) => {\n          const offers = result.data.offer\n            .filter((x) => x.publicationDate)\n            .sort((a, b) => new Date(b.publicationDate) - new Date(a.publicationDate))\n\n          setOffers(offers)\n        })\n      setTimeout(() => {\n        setLoading(false)\n      }, 1000)\n    }\n    fetchData()\n  }, [])\n  const createApolloClient = () => {\n    const httpLink = new HttpLink({\n      uri: GRAPHQL_ENDPOINT,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n    })\n\n    const wsLink = new WebSocketLink({\n      uri: GRAPHQL_SUBSCRIPTIONS,\n      headers: {\n        Authorization: `Bearer ${AUTH_JWT}`,\n      },\n      options: {\n        reconnect: true,\n      },\n    })\n\n    const splitLink = split(\n      ({ query }) => {\n        const definition = getMainDefinition(query)\n        return definition.kind === 'OperationDefinition' && definition.operation === 'subscription'\n      },\n      wsLink,\n      httpLink,\n    )\n\n    return new ApolloClient({\n      link: splitLink,\n      cache: new InMemoryCache(),\n    })\n  }\n\n  return loading ? (\n    <CRow className=\"justify-content-center\">\n      <CCol className=\"p-4\" xs={6}>\n        <TailSpin height=\"100\" width=\"100\" color=\"grey\" ariaLabel=\"loading\" />\n      </CCol>\n    </CRow>\n  ) : (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <MUIDataTable\n            title={'Liste des offres'}\n            data={offers}\n            columns={columns}\n            options={options}\n          />\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Offres\n","import React from 'react'\nimport Employeurs from './views/employeurs/Employeurs'\nimport ExtrasPro from './views/extrasPro/ExtrasPro'\nimport InfoG from './views/infoG/InfoG'\nimport Missions from './views/missions/Missions'\nimport Offres from './views/offres/Offres'\n\nconst Extras = React.lazy(() => import('./views/extras/Extras'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\nconst Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\n\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Extras' },\n  { path: '/extras', name: 'Extras', component: Extras },\n  { path: '/extrasPro', name: 'Extras Pro', component: ExtrasPro },\n  { path: '/employeurs', name: 'Employeurs', component: Employeurs },\n  { path: '/infoG', name: 'InfoG', component: InfoG },\n  { path: '/missions', name: 'Missions', component: Missions },\n  { path: '/offres', name: 'Offres', component: Offres },\n  { path: '/theme', name: 'Theme', component: Colors, exact: true },\n  { path: '/theme/colors', name: 'Colors', component: Colors },\n  { path: '/theme/typography', name: 'Typography', component: Typography },\n  { path: '/base', name: 'Base', component: Cards, exact: true },\n  { path: '/base/accordion', name: 'Accordion', component: Accordion },\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  { path: '/base/cards', name: 'Cards', component: Cards },\n  { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  { path: '/base/navs', name: 'Navs', component: Navs },\n  { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  { path: '/base/progress', name: 'Progress', component: Progress },\n  { path: '/base/spinners', name: 'Spinners', component: Spinners },\n  { path: '/base/tables', name: 'Tables', component: Tables },\n  { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  { path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\n  { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  { path: '/buttons/dropdowns', name: 'Dropdowns', component: Dropdowns },\n  { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\n  { path: '/charts', name: 'Charts', component: Charts },\n  { path: '/forms', name: 'Forms', component: FormControl, exact: true },\n  { path: '/forms/form-control', name: 'Form Control', component: FormControl },\n  { path: '/forms/select', name: 'Select', component: Select },\n  { path: '/forms/checks-radios', name: 'Checks & Radios', component: ChecksRadios },\n  { path: '/forms/range', name: 'Range', component: Range },\n  { path: '/forms/input-group', name: 'Input Group', component: InputGroup },\n  { path: '/forms/floating-labels', name: 'Floating Labels', component: FloatingLabels },\n  { path: '/forms/layout', name: 'Layout', component: Layout },\n  { path: '/forms/validation', name: 'Validation', component: Validation },\n  { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  { path: '/icons/flags', name: 'Flags', component: Flags },\n  { path: '/icons/brands', name: 'Brands', component: Brands },\n  { path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\n  { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  { path: '/notifications/badges', name: 'Badges', component: Badges },\n  { path: '/notifications/modals', name: 'Modals', component: Modals },\n  { path: '/notifications/toasts', name: 'Toasts', component: Toasts },\n  { path: '/widgets', name: 'Widgets', component: Widgets },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute.name\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      breadcrumbs.push({\n        pathname: currentPathname,\n        name: getRouteName(currentPathname, routes),\n        active: index + 1 === array.length ? true : false,\n      })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Switch>\n          {routes.map((route, idx) => {\n            return (\n              route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={(props) => (\n                    <>\n                      <route.component {...props} />\n                    </>\n                  )}\n                />\n              )\n            )\n          })}\n          <Redirect from=\"/\" to=\"/extras\" />\n        </Switch>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div></div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">\n          un Extra\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","export default __webpack_public_path__ + \"static/media/8.35ee8919.jpg\";","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport avatar8 from './../../assets/images/avatars/8.jpg'\n\nconst AppHeaderDropdown = () => {\n  return <CDropdown variant=\"nav-item\"></CDropdown>\n}\n\nexport default AppHeaderDropdown\n","export const logo = [\n  '608 134',\n  `\n  <title>coreui react pro</title>\n  <g>\n    <g style=\"fill:#00a1ff\">\n      <path d=\"M362.0177,90.1512,353.25,69.4149a.2507.2507,0,0,0-.2559-.1914H343.01a.2263.2263,0,0,0-.2559.2559V90.0233a.5657.5657,0,0,1-.64.64h-1.2163a.5652.5652,0,0,1-.64-.64V46.5028a.5655.5655,0,0,1,.64-.64H353.442a9.9792,9.9792,0,0,1,7.7437,3.2324A12.2,12.2,0,0,1,364.13,57.64a12.4389,12.4389,0,0,1-2.24,7.584,9.37,9.37,0,0,1-6.08,3.7441c-.1709.086-.2139.1915-.128.3194l8.7041,20.6084.064.2558q0,.5127-.5757.5118h-1.1523A.703.703,0,0,1,362.0177,90.1512ZM342.754,48.3593v18.496a.2259.2259,0,0,0,.2559.2559h10.3037a7.6713,7.6713,0,0,0,6.0166-2.5918,9.8807,9.8807,0,0,0,2.3037-6.8164,10.2875,10.2875,0,0,0-2.272-6.9756,7.6033,7.6033,0,0,0-6.0483-2.624H343.01A.2263.2263,0,0,0,342.754,48.3593Z\"/>\n      <path d=\"M401.3263,48.1034H381.2945a.2262.2262,0,0,0-.2558.2559v18.496a.2259.2259,0,0,0,.2558.2559h13.8238a.5664.5664,0,0,1,.6406.64v.96a.5663.5663,0,0,1-.6406.6406H381.2945a.2263.2263,0,0,0-.2558.2559v18.56a.2258.2258,0,0,0,.2558.2558h20.0318a.5671.5671,0,0,1,.6406.6407v.96a.566.566,0,0,1-.6406.64H379.1827a.5653.5653,0,0,1-.64-.64V46.5028a.5656.5656,0,0,1,.64-.64h22.1436a.5664.5664,0,0,1,.6406.64v.96A.5663.5663,0,0,1,401.3263,48.1034Z\"/>\n      <path d=\"M439.047,90.1512l-2.4317-8.832a.2971.2971,0,0,0-.32-.1924H419.5274a.2957.2957,0,0,0-.32.1924l-2.3681,8.7676a.6577.6577,0,0,1-.7036.5762H414.919a.5385.5385,0,0,1-.5756-.7041l12.0317-43.584a.6436.6436,0,0,1,.7041-.5117h1.6a.6442.6442,0,0,1,.7041.5117l12.16,43.584.0644.1923q0,.5127-.64.5118h-1.2163A.6428.6428,0,0,1,439.047,90.1512ZM419.9435,78.9188a.3031.3031,0,0,0,.2236.0967h15.4883a.3048.3048,0,0,0,.2236-.0967c.0645-.0635.0742-.1162.0322-.1592l-7.872-28.9287c-.043-.0849-.086-.1279-.128-.1279s-.0859.043-.1279.1279L419.9112,78.76C419.8683,78.8026,419.879,78.8553,419.9435,78.9188Z\"/>\n      <path d=\"M456.6017,87.911a11.6372,11.6372,0,0,1-3.3277-8.7041V57.1913a11.4158,11.4158,0,0,1,3.36-8.5762,12.0941,12.0941,0,0,1,8.8-3.2637,12.2566,12.2566,0,0,1,8.8643,3.2315,11.3927,11.3927,0,0,1,3.36,8.6084v.64a.5663.5663,0,0,1-.6406.6407l-1.28.0634q-.6408,0-.64-.5761v-.8321a9.289,9.289,0,0,0-2.6558-6.9121,10.6734,10.6734,0,0,0-14.0161,0,9.2854,9.2854,0,0,0-2.6563,6.9121V79.3993a9.2808,9.2808,0,0,0,2.6563,6.9121,10.67,10.67,0,0,0,14.0161,0,9.2843,9.2843,0,0,0,2.6558-6.9121v-.7686q0-.5757.64-.5752l1.28.0635a.5667.5667,0,0,1,.6406.6406v.5118a11.4952,11.4952,0,0,1-3.36,8.64,13.6227,13.6227,0,0,1-17.6963,0Z\"/>\n      <path d=\"M514.4376,46.5028v.96a.5658.5658,0,0,1-.64.6406H503.046a.2263.2263,0,0,0-.2559.2559v41.664a.566.566,0,0,1-.6406.64h-1.2158a.5652.5652,0,0,1-.64-.64V48.3593a.2266.2266,0,0,0-.2558-.2559H489.8619a.5656.5656,0,0,1-.64-.6406v-.96a.5656.5656,0,0,1,.64-.64H513.798A.5658.5658,0,0,1,514.4376,46.5028Z\"/>\n      <path d=\"M522.0665,89.5116a2.8385,2.8385,0,0,1-.8-2.0488,2.9194,2.9194,0,0,1,.8-2.1114,2.7544,2.7544,0,0,1,2.08-.832,2.8465,2.8465,0,0,1,2.9438,2.9434,2.7541,2.7541,0,0,1-.832,2.08,2.9221,2.9221,0,0,1-2.1118.8008A2.754,2.754,0,0,1,522.0665,89.5116Z\"/>\n      <path d=\"M542.4054,88.0077a11.3123,11.3123,0,0,1-3.2-8.416v-5.44a.5656.5656,0,0,1,.64-.64h1.2158a.5661.5661,0,0,1,.64.64v5.5039a9.1424,9.1424,0,0,0,2.5283,6.72,8.9745,8.9745,0,0,0,6.6875,2.5605,8.7908,8.7908,0,0,0,9.28-9.28V46.5028a.5655.5655,0,0,1,.64-.64h1.2163a.566.566,0,0,1,.64.64V79.5917a11.2545,11.2545,0,0,1-3.2325,8.416,13.0618,13.0618,0,0,1-17.0556,0Z\"/>\n      <path d=\"M580.35,88.1034a10.4859,10.4859,0,0,1-3.36-8.1279v-1.792a.5663.5663,0,0,1,.64-.6407h1.0884a.5668.5668,0,0,1,.64.6407v1.6a8.5459,8.5459,0,0,0,2.752,6.6562,10.5353,10.5353,0,0,0,7.36,2.4961,9.8719,9.8719,0,0,0,6.9761-2.3681,8.2161,8.2161,0,0,0,2.56-6.336,8.4,8.4,0,0,0-1.12-4.416,11.3812,11.3812,0,0,0-3.3281-3.3926,71.6714,71.6714,0,0,0-6.1763-3.7119,71.0479,71.0479,0,0,1-6.24-3.84,12.1711,12.1711,0,0,1-3.4238-3.68,10.2614,10.2614,0,0,1-1.28-5.3438,9.8579,9.8579,0,0,1,3.0718-7.7441,12.0122,12.0122,0,0,1,8.32-2.752q5.6954,0,8.96,3.1036a10.8251,10.8251,0,0,1,3.2642,8.2246v1.6a.5658.5658,0,0,1-.64.64h-1.1519a.5652.5652,0,0,1-.64-.64V56.8075a8.8647,8.8647,0,0,0-2.624-6.6885,9.9933,9.9933,0,0,0-7.232-2.5273,9.37,9.37,0,0,0-6.5278,2.1435,7.8224,7.8224,0,0,0-2.3682,6.1123,7.8006,7.8006,0,0,0,1.0244,4.16,10.387,10.387,0,0,0,3.0078,3.0391,62.8714,62.8714,0,0,0,5.9522,3.4882,71.0575,71.0575,0,0,1,6.72,4.2559,13.4674,13.4674,0,0,1,3.648,3.9365,10.049,10.049,0,0,1,1.28,5.1836,10.7177,10.7177,0,0,1-3.2637,8.1924q-3.2637,3.0717-8.832,3.0723Q583.71,91.1757,580.35,88.1034Z\"/>\n    </g>\n    <g style=\"fill:#3c4b64\">\n      <g>\n        <path d=\"M99.835,36.0577l-39-22.5167a12,12,0,0,0-12,0l-39,22.5166a12.0339,12.0339,0,0,0-6,10.3924V91.4833a12.0333,12.0333,0,0,0,6,10.3923l39,22.5167a12,12,0,0,0,12,0l39-22.5167a12.0331,12.0331,0,0,0,6-10.3923V46.45A12.0334,12.0334,0,0,0,99.835,36.0577Zm-2,55.4256a4,4,0,0,1-2,3.4641l-39,22.5167a4.0006,4.0006,0,0,1-4,0l-39-22.5167a4,4,0,0,1-2-3.4641V46.45a4,4,0,0,1,2-3.4642l39-22.5166a4,4,0,0,1,4,0l39,22.5166a4,4,0,0,1,2,3.4642Z\"/>\n        <path d=\"M77.8567,82.0046h-2.866a4,4,0,0,0-1.9247.4934L55.7852,91.9833,35.835,80.4648V57.4872l19.95-11.5185,17.2893,9.4549a3.9993,3.9993,0,0,0,1.9192.4906h2.8632a2,2,0,0,0,2-2V51.2024a2,2,0,0,0-1.04-1.7547L59.628,38.9521a8.0391,8.0391,0,0,0-7.8428.09L31.8346,50.56a8.0246,8.0246,0,0,0-4,6.9287v22.976a8,8,0,0,0,4,6.9283l19.95,11.5186a8.0429,8.0429,0,0,0,7.8433.0879l19.19-10.5312a2,2,0,0,0,1.0378-1.7533v-2.71A2,2,0,0,0,77.8567,82.0046Z\"/>\n      </g>\n      <g>\n        <path d=\"M172.58,45.3618a15.0166,15.0166,0,0,0-15,14.9995V77.6387a15,15,0,0,0,30,0V60.3613A15.0166,15.0166,0,0,0,172.58,45.3618Zm7,32.2769a7,7,0,0,1-14,0V60.3613a7,7,0,0,1,14,0Z\"/>\n        <path d=\"M135.9138,53.4211a7.01,7.01,0,0,1,7.8681,6.0752.9894.9894,0,0,0,.9843.865h6.03a1.0108,1.0108,0,0,0,.9987-1.0971,15.0182,15.0182,0,0,0-15.7162-13.8837,15.2881,15.2881,0,0,0-14.2441,15.4163V77.2037A15.288,15.288,0,0,0,136.0792,92.62a15.0183,15.0183,0,0,0,15.7162-13.8842,1.0107,1.0107,0,0,0-.9987-1.0971h-6.03a.9894.9894,0,0,0-.9843.865,7.01,7.01,0,0,1-7.8679,6.0757,7.1642,7.1642,0,0,1-6.0789-7.1849V60.6057A7.1638,7.1638,0,0,1,135.9138,53.4211Z\"/>\n        <path d=\"M218.7572,72.9277a12.1585,12.1585,0,0,0,7.1843-11.0771V58.1494A12.1494,12.1494,0,0,0,213.7921,46H196.835a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V74h6.6216l7.9154,17.4138a1,1,0,0,0,.91.5862h6.5911a1,1,0,0,0,.91-1.4138Zm-.8157-11.0771A4.1538,4.1538,0,0,1,213.7926,66h-9.8511V54h9.8511a4.1538,4.1538,0,0,1,4.1489,4.1494Z\"/>\n        <path d=\"M260.835,46h-26a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h26a1,1,0,0,0,1-1V85a1,1,0,0,0-1-1h-19V72h13a1,1,0,0,0,1-1V65a1,1,0,0,0-1-1h-13V54h19a1,1,0,0,0,1-1V47A1,1,0,0,0,260.835,46Z\"/>\n        <path d=\"M298.835,46h-6a1,1,0,0,0-1,1V69.6475a7.0066,7.0066,0,1,1-14,0V47a1,1,0,0,0-1-1h-6a1,1,0,0,0-1,1V69.6475a15.0031,15.0031,0,1,0,30,0V47A1,1,0,0,0,298.835,46Z\"/>\n        <rect x=\"307.835\" y=\"46\" width=\"8\" height=\"38\" rx=\"1\"/>\n      </g>\n    </g>\n  </g>\n`,\n]\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink href=\"#\"></CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\"></CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\"></CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav></CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n            activeClassName: 'active',\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","export default __webpack_public_path__ + \"static/media/logo.329eb3d7.png\";","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Extras',\n    to: '/extras',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Extra pro',\n    to: '/extrasPro',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Employeurs',\n    to: '/employeurs',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Informations générales',\n    to: '/infoG',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Missions',\n    to: '/missions',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Offres',\n    to: '/offres',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\nimport logoImg from 'src/assets/images/logo.png'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <img src={logoImg} style={{ height: 30, width: 30, marginRight: 15 }} alt=\"Logo\" />\n        UnExtra Backend\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${\n            plural ? 'have' : 'has'\n          } been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nimport packageJson from '../../package.json'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon icon={cilCode} className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","export const departement = {\n  nc: 'Non renseigné',\n  '01': 'Ain',\n  '02': 'Aisne',\n  '03': 'Allier',\n  '04': 'Alpes-de-Haute-Provence',\n  '05': 'Hautes-Alpes',\n  '06': 'Alpes-Maritimes',\n  '07': 'Ardèche',\n  '08': 'Ardennes',\n  '09': 'Ariège',\n  10: 'Aube',\n  11: 'Aude',\n  12: 'Aveyron',\n  13: 'Bouches-du-Rhône',\n  14: 'Calvados',\n  15: 'Cantal',\n  16: 'Charente',\n  17: 'Charente-Maritime',\n  18: 'Cher',\n  19: 'Corrèze',\n  21: \"Côte-d'Or\",\n  22: \"Côtes-d'Armor\",\n  23: 'Creuse',\n  24: 'Dordogne',\n  25: 'Doubs',\n  26: 'Drôme',\n  27: 'Eure',\n  28: 'Eure-et-Loir',\n  29: 'Finistère',\n  '2A': 'Corse-du-Sud',\n  '2B': 'Haute-Corse',\n  30: 'Gard',\n  31: 'Haute-Garonne',\n  32: 'Gers',\n  33: 'Gironde',\n  34: 'Hérault',\n  35: 'Ille-et-Vilaine',\n  36: 'Indre',\n  37: 'Indre-et-Loire',\n  38: 'Isère',\n  39: 'Jura',\n  40: 'Landes',\n  41: 'Loir-et-Cher',\n  42: 'Loire',\n  43: 'Haute-Loire',\n  44: 'Loire-Atlantique',\n  45: 'Loiret',\n  46: 'Lot',\n  47: 'Lot-et-Garonne',\n  48: 'Lozère',\n  49: 'Maine-et-Loire',\n  50: 'Manche',\n  51: 'Marne',\n  52: 'Haute-Marne',\n  53: 'Mayenne',\n  54: 'Meurthe-et-Moselle',\n  55: 'Meuse',\n  56: 'Morbihan',\n  57: 'Moselle',\n  58: 'Nièvre',\n  59: 'Nord',\n  60: 'Oise',\n  61: 'Orne',\n  62: 'Pas-de-Calais',\n  63: 'Puy-de-Dôme',\n  64: 'Pyrénées-Atlantiques',\n  65: 'Hautes-Pyrénées',\n  66: 'Pyrénées-Orientales',\n  67: 'Bas-Rhin',\n  68: 'Haut-Rhin',\n  69: 'Rhône',\n  70: 'Haute-Saône',\n  71: 'Saône-et-Loire',\n  72: 'Sarthe',\n  73: 'Savoie',\n  74: 'Haute-Savoie',\n  75: 'Paris',\n  76: 'Seine-Maritime',\n  77: 'Seine-et-Marne',\n  78: 'Yvelines',\n  79: 'Deux-Sèvres',\n  80: 'Somme',\n  81: 'Tarn',\n  82: 'Tarn-et-Garonne',\n  83: 'Var',\n  84: 'Vaucluse',\n  85: 'Vendée',\n  86: 'Vienne',\n  87: 'Haute-Vienne',\n  88: 'Vosges',\n  89: 'Yonne',\n  90: 'Territoire de Belfort',\n  91: 'Essonne',\n  92: 'Hauts-de-Seine',\n  93: 'Seine-Saint-Denis',\n  94: 'Val-de-Marne',\n  95: \"Val-d'Oise\",\n  971: 'Guadeloupe',\n  972: 'Martinique',\n  973: 'Guyane',\n  974: 'La Réunion',\n  976: 'Mayotte',\n}\n"],"sourceRoot":""}